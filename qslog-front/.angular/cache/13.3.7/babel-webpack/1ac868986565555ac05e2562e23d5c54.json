{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormModalComponent } from 'src/app/core/form-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"src/app/core/alert.service\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction UserFormComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function UserFormComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.resetPassword();\n    });\n    i0.ɵɵtext(1, \"Resetar Senha\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserFormComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Por favor, informe um nome.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserFormComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Por favor, informe um e-mail.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserFormComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Por favor, informe um login.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent extends FormModalComponent {\n    constructor(bsModalRef, alertService, userService) {\n      super(bsModalRef, alertService);\n      this.bsModalRef = bsModalRef;\n      this.alertService = alertService;\n      this.userService = userService;\n      this.isUpdate = false;\n      this.createForm();\n    }\n\n    ngOnInit() {\n      if (this.id) {\n        this.title = 'Alterar usuário';\n        this.get();\n        this.isUpdate = true;\n        return;\n      }\n\n      this.title = 'Incluir usuário';\n      this.isUpdate = false;\n    }\n\n    get() {\n      this.startLoading();\n      this.userService.getById(this.id).subscribe(u => {\n        this.principalForm.setValue(u);\n        this.endLoading();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n    createForm() {\n      this.principalForm = new FormGroup({\n        name: new FormControl('', Validators.required),\n        email: new FormControl('', Validators.required),\n        userName: new FormControl('', Validators.required),\n        administrator: new FormControl('')\n      });\n    }\n\n    save() {\n      if (this.principalForm.valid) {\n        if (this.isUpdate) {\n          this.update();\n        } else {\n          this.create();\n        }\n      } else {\n        this.principalForm.markAllAsTouched();\n      }\n    }\n\n    resetPassword() {\n      this.alertService.showQuestion('Tem certeza disso??', 'Deseja realmente atualizar a senha desse usuario?', () => {\n        this.startLoading();\n        this.userService.resetPassword(this.id).subscribe(() => {\n          this.alertService.showSuccess('Atualizado', 'A nova senha será 123456. Lembre o esperto de trocar em meus dados.');\n          this.endLoading();\n        }, e => {\n          this.catchError(e);\n        });\n      });\n    }\n\n    create() {\n      this.startLoading();\n      this.userService.create(this.principalForm.value).subscribe(() => {\n        this.alertService.showSuccessTimer('Usuário criado com sucesso.');\n        this.endLoading();\n        this.close();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n    update() {\n      this.startLoading();\n      this.userService.update(this.principalForm.value, this.id).subscribe(() => {\n        this.alertService.showSuccessTimer('Usuário alterado com sucesso.');\n        this.endLoading();\n        this.close();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n  }\n\n  UserFormComponent.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.UserService));\n  };\n\n  UserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 38,\n    vars: 9,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\", \"pull-left\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"pull-right\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"type\", \"button\", \"class\", \"btn btn-light-info btn-sm font-weight-bold ml-2 pull-right\", 3, \"click\", 4, \"ngIf\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"card-body\"], [1, \"mb-2\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"userName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-form-label\"], [1, \"checkbox-inline\"], [1, \"checkbox\", \"checkbox-success\"], [\"type\", \"checkbox\", \"name\", \"Checkboxes5\", \"formControlName\", \"administrator\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-light-success\", \"btn-sm\", \"font-weight-bold\", \"ml-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-light-primary\", \"btn-sm\", \"font-weight-bold\", \"ml-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-light-info\", \"btn-sm\", \"font-weight-bold\", \"ml-2\", \"pull-right\", 3, \"click\"], [1, \"form-text\", \"text-danger\"]],\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_3_listener() {\n          return ctx.bsModalRef.hide();\n        });\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, UserFormComponent_button_6_Template, 2, 0, \"button\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\");\n        i0.ɵɵtext(13, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, UserFormComponent_span_15_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\");\n        i0.ɵɵtext(18, \"E-mail:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵtemplate(20, UserFormComponent_span_20_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\");\n        i0.ɵɵtext(23, \"Login:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 13);\n        i0.ɵɵtemplate(25, UserFormComponent_span_25_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 9)(27, \"div\", 14)(28, \"div\", 15)(29, \"label\", 16);\n        i0.ɵɵelement(30, \"input\", 17)(31, \"span\");\n        i0.ɵɵtext(32, \"Administrador\");\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(33, \"div\", 18)(34, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_34_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(35, \"Gravar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_36_listener() {\n          return ctx.bsModalRef.hide();\n        });\n        i0.ɵɵtext(37, \"Sair\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUpdate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.principalForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", ctx.classInvalidField(\"name\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalidField(\"name\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.classInvalidField(\"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalidField(\"email\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.classInvalidField(\"userName\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalidField(\"userName\"));\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i4.NgClass, i5.CheckboxControlValueAccessor],\n    styles: [\"\"]\n  });\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}