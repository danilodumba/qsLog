{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormModalComponent } from 'src/app/core/form-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"src/app/core/alert.service\";\nimport * as i3 from \"../services/project.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction ProjectFormComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Por favor, informe um nome.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProjectFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\");\n    i0.ɵɵtext(2, \"API-KEY\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ProjectFormComponent = /*#__PURE__*/(() => {\n  class ProjectFormComponent extends FormModalComponent {\n    constructor(bsModalRef, alertService, projectService) {\n      super(bsModalRef, alertService);\n      this.bsModalRef = bsModalRef;\n      this.alertService = alertService;\n      this.projectService = projectService;\n      this.isUpdate = false;\n      this.createForm();\n    }\n\n    ngOnInit() {\n      if (this.id) {\n        this.title = 'Alterar projeto';\n        this.get();\n        this.isUpdate = true;\n        return;\n      }\n\n      this.title = 'Incluir projeto';\n      this.isUpdate = false;\n    }\n\n    get() {\n      this.startLoading();\n      this.projectService.getById(this.id).subscribe(p => {\n        console.log(p);\n        var project = {\n          name: p.name,\n          apiKey: p.apiKey\n        };\n        this.principalForm.setValue(project);\n        this.endLoading();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n    createForm() {\n      this.principalForm = new FormGroup({\n        name: new FormControl('', Validators.required),\n        apiKey: new FormControl('')\n      });\n    }\n\n    save() {\n      if (this.principalForm.valid) {\n        if (this.isUpdate) {\n          this.update();\n        } else {\n          this.create();\n        }\n      } else {\n        this.principalForm.markAllAsTouched();\n      }\n    }\n\n    create() {\n      this.startLoading();\n      var project = {\n        name: this.principalForm.value.name\n      };\n      this.projectService.create(project).subscribe(() => {\n        this.alertService.showSuccessTimer('Projeto criado com sucesso.');\n        this.endLoading();\n        this.close();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n    update() {\n      this.startLoading();\n      this.projectService.update(this.principalForm.value, this.id).subscribe(() => {\n        this.alertService.showSuccessTimer('Projeto alterado com sucesso.');\n        this.endLoading();\n        this.close();\n      }, e => {\n        this.catchError(e);\n      });\n    }\n\n  }\n\n  ProjectFormComponent.ɵfac = function ProjectFormComponent_Factory(t) {\n    return new (t || ProjectFormComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ProjectService));\n  };\n\n  ProjectFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectFormComponent,\n    selectors: [[\"app-project-form\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 21,\n    vars: 5,\n    consts: [[1, \"modal-header\"], [1, \"modal-title\", \"pull-left\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"pull-right\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"card-body\"], [1, \"mb-8\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-light-success\", \"btn-sm\", \"font-weight-bold\", \"ml-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-light-primary\", \"btn-sm\", \"font-weight-bold\", \"ml-2\", 3, \"click\"], [1, \"form-text\", \"text-danger\"], [\"type\", \"text\", \"formControlName\", \"apiKey\", \"readonly\", \"\", 1, \"form-control\"]],\n    template: function ProjectFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ProjectFormComponent_Template_button_click_3_listener() {\n          return ctx.bsModalRef.hide();\n        });\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\");\n        i0.ɵɵtext(12, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵtemplate(14, ProjectFormComponent_span_14_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ProjectFormComponent_div_15_Template, 4, 0, \"div\", 11);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ProjectFormComponent_Template_button_click_17_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(18, \"Gravar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ProjectFormComponent_Template_button_click_19_listener() {\n          return ctx.bsModalRef.hide();\n        });\n        i0.ɵɵtext(20, \"Sair\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.principalForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", ctx.classInvalidField(\"name\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalidField(\"name\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUpdate);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.NgClass, i5.NgIf],\n    styles: [\"\"]\n  });\n  return ProjectFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}